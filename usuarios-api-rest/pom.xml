<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.curso.usuarios</groupId>
  <artifactId>usuarios-api-rest</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  
	<!-- Configuraciones para los plugins de maven que estén dados de alta en el proyecto -->
	<properties>
		  <java.version>11</java.version>
		  <maven.compiler.source>11</maven.compiler.source>
		  <maven.compiler.target>11</maven.compiler.target>
		  <m2e.apt.activation>jdt_apt</m2e.apt.activation>
	</properties>
  
  	<!-- Librerias que necesita mi proyecto --> 
	<dependencies>
		<!-- En esa app web queremos trabajar con Persistencia (BBDD)-->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-web</artifactId>
		    <version>2.7.12</version>
		</dependency>	
		<dependency>	
		  <groupId>com.curso.usuarios</groupId>
		  <artifactId>usuarios-servicio</artifactId>
		  <version>0.0.1-SNAPSHOT</version>
		</dependency>	

<!-- ********************************************* UTILIDADES ************************************************************ -->

		<!-- Lombok, nos da un montón de anotaciones muy útiles-->
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <version>1.18.26</version>
		    <!-- 
		    Esta dependencia no se necesita en tiempo de ejecución. 
		    Lo que hace es en tiempo de compilación generar código por mi
		    No hace falta distribuir el jar de lombok a mis usuarios.
		    Realmente scope: provided hace un truco. Decimos: En el entorno de ejecución... te la darán 
		    -->
		    <scope>provided</scope>
		</dependency>	
		
		<!-- Automapeador -->
		<dependency>
		    <groupId>org.mapstruct</groupId>
		    <artifactId>mapstruct</artifactId>
		    <version>1.5.5.Final</version>
		</dependency>
		
		<!-- Para que el Automapper y lombok puedan trabajar juntos sin problema
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok-mapstruct-binding</artifactId>
		    <version>0.2.0</version>
		</dependency>-->
<!-- ********************************************* PRUEBAS ************************************************************ -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-test</artifactId>
		    <version>2.7.12</version>
		    <scope>test</scope>
		</dependency>	
		<!-- Esto mete cucumber -->
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-java</artifactId>
		    <version>7.12.0</version>
		    <scope>test</scope>
		</dependency>		
		<!-- Junit platform, que permite a JUNIT delegar la ejecución de pruebas a otros frameworks, como cucumber -->
		<dependency>
		    <groupId>org.junit.platform</groupId>
		    <artifactId>junit-platform-suite</artifactId>
		    <version>1.9.3</version>
		    <scope>test</scope>
		</dependency>
		<!--Que nos permite configurar pruebas de cucumber con Spring-->
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-spring</artifactId>
		    <version>7.12.0</version>
		    <scope>test</scope>
		</dependency>
		<!--La libreria que permite que cucumber sea invocado a través de JUNIT-->
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-junit-platform-engine</artifactId>
		    <version>7.12.0</version>
		    <scope>test</scope>
		</dependency>
		<!-- Montame un bbdd de pruebas-->
		<dependency>
		    <groupId>com.h2database</groupId>
		    <artifactId>h2</artifactId>
		    <version>2.1.214</version>
		    <scope>test</scope>
		</dependency>
	</dependencies>

	<!-- 
		Nos aseguramos que tenemos una versión del plugin que ejecuta las pruebas: surefire
		que trabaje con Junit 5	
	-->
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
	        <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-compiler-plugin</artifactId>
	            <version>3.8.1</version>
	            <configuration>
	                <annotationProcessorPaths>
	                    <path>
	                        <groupId>org.mapstruct</groupId>
	                        <artifactId>mapstruct-processor</artifactId>
	                        <version>1.5.5.Final</version>
	                    </path>
						<path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>1.18.26</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>0.2.0</version>
                        </path>
                    </annotationProcessorPaths>
	            </configuration>
	        </plugin>
	    </plugins>
	</build>

</project>










